<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Hello</title>
</head>
<body>

<button onclick="window.location.href = '/';" class="mui-btn mui-btn-block mui-btn-primary">返回主页</button></br>
<img src="{{.Photo}}" id="photo" width="200px" alt="用户头像" />
</br>
<input type="file" id="selector" accept="image/jpeg,image/png" />
<button id='changePhoto' onclick="setPhoto();">修改图片</button>

<div class="mui-content">
    <form class="mui-input-group">
        <div class="mui-input-row">
            <label>旧密码</label>
            <input id='oldpass' type="password" class="mui-input-clear mui-input" placeholder="请输入旧密码">
        </div>
        <div class="mui-input-row">
            <label>新密码</label>
            <input id='newpass' type="password" class="mui-input-clear mui-input" placeholder="请输入新密码">
        </div>
        <div class="mui-input-row">
            <label>新确认</label>
            <input id='newpass_confirm' type="password" class="mui-input-clear mui-input" placeholder="请确认新密码">
        </div>
    </form>
    <div class="mui-content-padded">
        <button id='commit' onclick="setPassword();" class="mui-btn mui-btn-block mui-btn-primary">修改密码</button>
    </div>
    <div class="mui-content-padded">
        <p id='result'></p>
    </div>
</div>

<div class="mui-content-padded">
    <p id='result'></p>
</div>

<p>{{.Username}}</p>
<p>email: {{.Email}}</p>

<script src="../js/md5.js"></script>
<script src="../js/protobuf.js"></script>
<script src="../js/pbcall.js"></script>
<!-- 内嵌的javascript代码 -->
<script>
    function setPhoto() {
        // 获取输入框内的值
        var file = document.getElementById('selector').files[0];
        if (!file) {
            console.log("请选择文件...");
            return
        }

        console.log(file);

        const data = {
            cmd: 0,
            username: "{{.Username}}",
            token: localStorage.getItem("Token"),
            type: "photo",
            filename: file.name,
        };

        pbcall("../proto/file.proto", "logics.FileReq", "logics.FileRsp", "/api/presignedUrl", data, function (rsp) {

            document.getElementById('result').innerText = rsp.message;

            if (0 == rsp.code) {
                // 将文件上传到url
                console.log(file);
                uploadFile(file, rsp.url);
            }
        });
    }


    function uploadFile(file, url) {
        fetch(url, {
            method: 'PUT',
            body: file
        }).then(() => {
            //通知到后台修改图片
            var fileSuffix = file.name.split('.').pop().toLowerCase();
            var data = {
                username: "{{.Username}}",
                photo: "{{.Username}}."+fileSuffix,
            };

            pbcall("../proto/user.proto", "logics.UserSetPhotoReq", "logics.Status", "/api/userSetPhoto", data, function (rspmsg) {
                document.getElementById('result').innerText = rspmsg.message;
                if (rspmsg.code == 0) {
                    var photo = document.getElementById('photo');
                    var reader = new FileReader();
                    reader.readAsDataURL(file);
                    reader.onload = function() {
                        // 将读取的结果显示在页面中
                        photo.src = reader.result;
                    }
                }
            });
        }).catch((e) => {
            console.error(e);
        });
    }

    async function setPassword() {
        // 获取输入框内的值

        var oldpassBox = document.getElementById('oldpass');
        var newpassBox = document.getElementById('newpass');
        var newpassConfirmBox = document.getElementById('newpass_confirm');

        var info = {
            username: "{{.Username}}",
            oldpass: oldpassBox.value,
            newpass: newpassBox.value,
        };

        //密码 由数字/字母/下划线组成 2-16位
        var passwordReg = /^(\w){2,16}$/;
        if (!passwordReg.test(info.oldpass)) {
            alert('密码只能由数字/字母/下划线组成(2-16位)。');
            return;
        }

        if (!passwordReg.test(info.newpass)) {
            alert('密码只能由数字/字母/下划线组成(2-16位)。');
            return;
        }

        if (info.oldpass == info.newpass) {
            alert('旧密码不能与新密码相同!');
            return;
        }

        var newpassConfirm = newpassConfirmBox.value;
        if (newpassConfirm != info.newpass) {
            alert('密码两次输入不一致');
            return;
        }

        info.oldpass = md5(info.oldpass);
        info.newpass = md5(info.newpass);
        console.log(info)

        pbcall("../proto/user.proto", "logics.UserSetPasswordReq", "logics.Status", "/api/userSetPassword", info, function (rsp) {

            document.getElementById('result').innerText = rsp.message;

            if (0 == rsp.code) {
                localStorage.setItem("Token", "");
            }
        });

        return;
    }

</script>
</body>
</html>