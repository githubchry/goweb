syntax = "proto3";      //指明使用proto3语法,否则编译器默认使用proto2的语法
package logics;       //包声明符, 相当于命名空间，产生的类会被包装在C++命名空间中
option go_package = "../internal/logics";

//proto3取消了optional和required限定修饰符，只能使用singular(默认)和repeated
//singular：该字段可以有0个或者1个（但是不能超过1个）。
//repeated：该字段可以重复任意多次（包括0次）。重复的值的顺序会被保留。

//命名规范
//message和enum命名采用驼峰命名方式，大写开头 比如Packet和PacketType
//字段命名采用小写字母加下划线分隔方式 比如packet和packet_type

//protoc --go_out=plugins=grpc:.  --cpp_out=. algorithm.proto


message ImageFile {
  enum FileType {
    option allow_alias = true;  //可以通过为不同的枚举常量指定相同的值来定义别名(alias)
    FILE_TYPE_UNKNOW = 0;
    FILE_TYPE_ERROR = 0;
    //枚举默认为第一个枚举定义的第一个值，必须是0，且为无效值，所有有意义的值请不要定义成0值
    //-------------------------------------------
    FILE_TYPE_JPG = 1;
    FILE_TYPE_PNG = 2;
  }

  bytes data= 1;
  FileType type= 2;
}

message AlgorithmInput {
  repeated ImageFile images= 1;
}

message TorchObject {
  int32 x = 1;
  int32 y = 2;
  int32 w = 3;
  int32 h = 4;
  int32 conf = 5;
  string label = 6;
}

message AlgorithmOutput {
  repeated TorchObject targets= 1;
  int32 code = 2;
  string message = 3;
}
